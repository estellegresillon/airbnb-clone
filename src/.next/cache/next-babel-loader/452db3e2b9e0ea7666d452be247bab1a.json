{"ast":null,"code":"var _jsxFileName = \"/Users/estellegresillon/Code/airbnb-redux/src/components/common/key.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport ScrollIntoView from 'react-scroll-into-view';\nimport Badge from \"../common/badge\";\nimport { useComponentVisible } from \"../../hooks/useRef\"; // key = légende\n\nconst Key = props => {\n  const {\n    listedRestaurants\n  } = props;\n  const {\n    ref,\n    isComponentVisible,\n    setIsComponentVisible\n  } = useComponentVisible(false);\n  const {\n    0: restaurantsWithAward,\n    1: setRestaurantsWithAward\n  } = useState([]);\n  useEffect(() => {\n    const awards = listedRestaurants.filter(restaurant => restaurant.award);\n    setRestaurantsWithAward(awards);\n  }, [listedRestaurants]);\n  return restaurantsWithAward.length > 0 ? __jsx(\"div\", {\n    className: \"keys-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"selection-button\",\n    onClick: () => setIsComponentVisible(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Awards \", __jsx(\"i\", {\n    className: \"fas fa-chevron-down\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), isComponentVisible && __jsx(\"div\", {\n    ref: ref,\n    className: \"filter-selection-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, restaurantsWithAward.map(restaurant => {\n    return __jsx(ScrollIntoView, {\n      key: restaurant.award.scroll,\n      selector: `#${restaurant.award.scroll}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(Badge, {\n      icon: restaurant.award.icon,\n      description: restaurant.award.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }))) : null;\n};\n\nexport default Key;","map":{"version":3,"sources":["/Users/estellegresillon/Code/airbnb-redux/src/components/common/key.jsx"],"names":["React","useState","useEffect","ScrollIntoView","Badge","useComponentVisible","Key","props","listedRestaurants","ref","isComponentVisible","setIsComponentVisible","restaurantsWithAward","setRestaurantsWithAward","awards","filter","restaurant","award","length","map","scroll","icon","description"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,mBAAT,QAAoC,oBAApC,C,CAEA;;AACA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAwBD,KAA9B;AACA,QAAM;AAAEE,IAAAA,GAAF;AAAOC,IAAAA,kBAAP;AAA2BC,IAAAA;AAA3B,MAAqDN,mBAAmB,CAAC,KAAD,CAA9E;AACA,QAAM;AAAA,OAACO,oBAAD;AAAA,OAAuBC;AAAvB,MAAkDZ,QAAQ,CAAC,EAAD,CAAhE;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,MAAM,GAAGN,iBAAiB,CAACO,MAAlB,CAAyBC,UAAU,IAAIA,UAAU,CAACC,KAAlD,CAAf;AACAJ,IAAAA,uBAAuB,CAACC,MAAD,CAAvB;AACD,GAHQ,EAGN,CAACN,iBAAD,CAHM,CAAT;AAKA,SAAOI,oBAAoB,CAACM,MAArB,GAA8B,CAA9B,GACL;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,OAAO,EAAE,MAAMP,qBAAqB,CAAC,IAAD,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACS;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADT,CADF,EAIGD,kBAAkB,IACjB;AAAK,IAAA,GAAG,EAAED,GAAV;AAAe,IAAA,SAAS,EAAC,0BAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,oBAAoB,CAACO,GAArB,CAAyBH,UAAU,IAAI;AACtC,WACE,MAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA,UAAU,CAACC,KAAX,CAAiBG,MAAtC;AAA8C,MAAA,QAAQ,EAAG,IAAGJ,UAAU,CAACC,KAAX,CAAiBG,MAAO,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,KAAD;AAAO,MAAA,IAAI,EAAEJ,UAAU,CAACC,KAAX,CAAiBI,IAA9B;AAAoC,MAAA,WAAW,EAAEL,UAAU,CAACC,KAAX,CAAiBK,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GANA,CADH,CALJ,CADK,GAgBH,IAhBJ;AAiBD,CA3BD;;AA6BA,eAAehB,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ScrollIntoView from 'react-scroll-into-view';\n\nimport Badge from \"../common/badge\";\nimport { useComponentVisible } from \"../../hooks/useRef\";\n\n// key = légende\nconst Key = props => {\n  const { listedRestaurants } = props;\n  const { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\n  const [restaurantsWithAward, setRestaurantsWithAward] = useState([]);\n\n  useEffect(() => {\n    const awards = listedRestaurants.filter(restaurant => restaurant.award);\n    setRestaurantsWithAward(awards);\n  }, [listedRestaurants]);\n\n  return restaurantsWithAward.length > 0 ? (\n    <div className=\"keys-wrapper\">\n      <div className=\"selection-button\" onClick={() => setIsComponentVisible(true)}> \n        Awards <i className=\"fas fa-chevron-down\" />\n      </div>\n      {isComponentVisible &&\n        <div ref={ref} className=\"filter-selection-wrapper\">\n          {restaurantsWithAward.map(restaurant => {\n            return (\n              <ScrollIntoView key={restaurant.award.scroll} selector={`#${restaurant.award.scroll}`}>\n                <Badge icon={restaurant.award.icon} description={restaurant.award.description} />\n              </ScrollIntoView>\n            )\n          })}\n        </div>}\n    </div>\n  ) : null;\n};\n\nexport default Key;\n"]},"metadata":{},"sourceType":"module"}