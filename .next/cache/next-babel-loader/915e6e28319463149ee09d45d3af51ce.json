{"ast":null,"code":"var __jsx = React.createElement;\n// pages/_app.js\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport withRedux from \"next-redux-wrapper\"; //import makeStore from \"../store/configureStore\";\n\nconst reducer = (state = {\n  foo: ''\n}, action) => {\n  if (state === undefined) {\n    return [];\n  }\n\n  ;\n\n  const sortByRate = restaurants => {\n    const sortedByRate = [...restaurants].sort((a, b) => {\n      if (a.rate < b.rate) return 1;\n      if (a.rate > b.rate) return -1;\n      return 0;\n    });\n    return sortedByRate;\n  };\n\n  switch (action.type) {\n    case \"SET_RESTAURANTS\":\n      return sortByRate(action.payload);\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nconst makeStore = (initialState, options) => {\n  return createStore(reducer, initialState);\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    // we can dispatch from here too\n    ctx.store.dispatch({\n      type: 'FOO',\n      payload: 'foo'\n    });\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(Component, pageProps));\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/estellegresillon/Code/airbnb-redux/src/pages/_app.js"],"names":["React","Provider","App","withRedux","reducer","state","foo","action","undefined","sortByRate","restaurants","sortedByRate","sort","a","b","rate","type","payload","makeStore","initialState","options","createStore","MyApp","getInitialProps","Component","ctx","store","dispatch","pageProps","render","props"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,SAAP,MAAsB,oBAAtB,C,CACA;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,GAAG,EAAE;AAAN,CAAT,EAAoBC,MAApB,KAA+B;AAC7C,MAAIF,KAAK,KAAKG,SAAd,EAAyB;AACvB,WAAO,EAAP;AACD;;AAAA;;AAED,QAAMC,UAAU,GAAIC,WAAD,IAAiB;AAClC,UAAMC,YAAY,GAAG,CAAC,GAAGD,WAAJ,EAAiBE,IAAjB,CAAsB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnD,UAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAP;AACrB,UAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB,OAAO,CAAC,CAAR;AACrB,aAAO,CAAP;AACD,KAJoB,CAArB;AAMA,WAAOJ,YAAP;AACD,GARD;;AAUA,UAAQJ,MAAM,CAACS,IAAf;AACE,SAAK,iBAAL;AACE,aAAOP,UAAU,CAACF,MAAM,CAACU,OAAR,CAAjB;;AACF;AACE,aAAOZ,KAAP;AAJJ;;AAKC;AACF,CArBD;;AAuBA,MAAMa,SAAS,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC3C,SAAOC,WAAW,CAACjB,OAAD,EAAUe,YAAV,CAAlB;AACD,CAFD;;AAIA,MAAMG,KAAN,SAAoBpB,GAApB,CAAwB;AAEtB,eAAaqB,eAAb,CAA6B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA7B,EAA+C;AAE3C;AACAA,IAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AAACX,MAAAA,IAAI,EAAE,KAAP;AAAcC,MAAAA,OAAO,EAAE;AAAvB,KAAnB;AAEA,UAAMW,SAAS,GAAGJ,SAAS,CAACD,eAAV,GAA4B,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlC,GAAmE,EAArF;AAEA,WAAO;AAACG,MAAAA;AAAD,KAAP;AAEH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACL,MAAAA,SAAD;AAAYI,MAAAA,SAAZ;AAAuBF,MAAAA;AAAvB,QAAgC,KAAKI,KAA3C;AACA,WACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ;AAAjB,OACI,MAAC,SAAD,EAAeE,SAAf,CADJ,CADJ;AAKH;;AApBqB;;AAwBxB,eAAezB,SAAS,CAACe,SAAD,CAAT,CAAqBI,KAArB,CAAf","sourcesContent":["// pages/_app.js\nimport React from \"react\";\nimport {Provider} from \"react-redux\";\nimport App from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\n//import makeStore from \"../store/configureStore\";\n\nconst reducer = (state = {foo: ''}, action) => {\n  if (state === undefined) {\n    return [];\n  };\n\n  const sortByRate = (restaurants) => {\n    const sortedByRate = [...restaurants].sort((a, b) => {\n      if (a.rate < b.rate) return 1;\n      if (a.rate > b.rate) return -1;\n      return 0;\n    });\n    \n    return sortedByRate;\n  }\n  \n  switch (action.type) {\n    case \"SET_RESTAURANTS\":\n      return sortByRate(action.payload);\n    default:\n      return state;\n  };\n};\n\nconst makeStore = (initialState, options) => {\n  return createStore(reducer, initialState);\n};\n\nclass MyApp extends App {\n\n  static async getInitialProps({Component, ctx}) {\n\n      // we can dispatch from here too\n      ctx.store.dispatch({type: 'FOO', payload: 'foo'});\n\n      const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n      return {pageProps};\n\n  }\n\n  render() {\n      const {Component, pageProps, store} = this.props;\n      return (\n          <Provider store={store}>\n              <Component {...pageProps} />\n          </Provider>\n      );\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);"]},"metadata":{},"sourceType":"module"}