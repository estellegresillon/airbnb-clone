{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { setRestaurants } from \"../../actions\";\nimport Card from \"../common/card\";\nimport Key from \"../common/key\";\n\nconst Awards = props => {\n  const {\n    setRestaurants,\n    restaurants\n  } = props;\n  const {\n    0: awardedRestaurants,\n    1: setAwardedRestaurants\n  } = useState([]);\n  const {\n    0: bg,\n    1: setBg\n  } = useState(\"http://benedict-paris.com/img/lightbox/plats/B-17.jpg\");\n  const {\n    0: title,\n    1: setImageTitle\n  } = useState(\"Les restaurants primés\");\n  const {\n    0: subtitle,\n    1: setImageSubtitle\n  } = useState(\"chaque semaine\");\n  useEffect(() => {\n    setRestaurants();\n  }, [setRestaurants]);\n  useEffect(() => {\n    const sortedRestaurants = [];\n    restaurants.forEach(restaurant => {\n      if (restaurant.award) {\n        sortedRestaurants.push(restaurant);\n      }\n\n      ;\n      setAwardedRestaurants(sortedRestaurants);\n    });\n  }, [restaurants]);\n\n  const handleListItemHover = restaurant => {\n    if (restaurant) {\n      setBg(restaurant.imageUrl);\n      setImageTitle(restaurant.award.description);\n      setImageSubtitle(restaurant.name);\n    } else {\n      setBg(\"http://benedict-paris.com/img/lightbox/plats/B-17.jpg\");\n      setImageTitle(\"Les restaurants primés\");\n      setImageSubtitle(\"chaque semaine\");\n    }\n  };\n\n  return awardedRestaurants.length > 0 ? __jsx(\"div\", {\n    className: \"awards-page-wrapper\"\n  }, __jsx(\"div\", {\n    className: \"awards-page-big-img\",\n    key: bg,\n    style: {\n      backgroundImage: `url(${bg})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\"\n    }\n  }, __jsx(\"h1\", {\n    className: \"awards-image-title\"\n  }, title), __jsx(\"div\", {\n    className: \"awards-image-subtitle\"\n  }, subtitle)), __jsx(\"div\", {\n    className: \"awards-listing\"\n  }, __jsx(\"div\", {\n    className: \"title-and-key\"\n  }, __jsx(\"h2\", {\n    className: \"awards-listing-title\"\n  }, \"Les restaurants prim\\xE9s\"), __jsx(Key, {\n    listedRestaurants: awardedRestaurants\n  })), awardedRestaurants.map((restaurant, i) => {\n    return __jsx(\"div\", {\n      key: restaurant.id,\n      onMouseEnter: () => handleListItemHover(restaurant),\n      onMouseLeave: () => handleListItemHover(),\n      className: \"awarded-restaurant\"\n    }, __jsx(Card, {\n      listedRestaurants: awardedRestaurants,\n      restaurant: restaurant,\n      tabIndex: i\n    }));\n  }))) : null;\n};\n\nconst mapStateToProps = state => {\n  return {\n    restaurants: state.restaurants\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    setRestaurants\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Awards);","map":{"version":3,"sources":["/Users/estellegresillon/Code/airbnb-redux/src/components/Awards/awards.jsx"],"names":["React","useState","useEffect","connect","bindActionCreators","setRestaurants","Card","Key","Awards","props","restaurants","awardedRestaurants","setAwardedRestaurants","bg","setBg","title","setImageTitle","subtitle","setImageSubtitle","sortedRestaurants","forEach","restaurant","award","push","handleListItemHover","imageUrl","description","name","length","backgroundImage","backgroundSize","backgroundPosition","map","i","id","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,QAAM;AAAEJ,IAAAA,cAAF;AAAkBK,IAAAA;AAAlB,MAAkCD,KAAxC;AACA,QAAM;AAAA,OAACE,kBAAD;AAAA,OAAqBC;AAArB,MAA8CX,QAAQ,CAAC,EAAD,CAA5D;AACA,QAAM;AAAA,OAACY,EAAD;AAAA,OAAKC;AAAL,MAAcb,QAAQ,CAAC,uDAAD,CAA5B;AACA,QAAM;AAAA,OAACc,KAAD;AAAA,OAAQC;AAAR,MAAyBf,QAAQ,CAAC,wBAAD,CAAvC;AACA,QAAM;AAAA,OAACgB,QAAD;AAAA,OAAWC;AAAX,MAA+BjB,QAAQ,CAAC,gBAAD,CAA7C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAAEG,IAAAA,cAAc;AAAK,GAA5B,EAA8B,CAACA,cAAD,CAA9B,CAAT;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,iBAAiB,GAAG,EAA1B;AACAT,IAAAA,WAAW,CAACU,OAAZ,CAAoBC,UAAU,IAAI;AAChC,UAAIA,UAAU,CAACC,KAAf,EAAsB;AACpBH,QAAAA,iBAAiB,CAACI,IAAlB,CAAuBF,UAAvB;AACD;;AAAA;AACDT,MAAAA,qBAAqB,CAACO,iBAAD,CAArB;AACD,KALD;AAMD,GARQ,EAQN,CAACT,WAAD,CARM,CAAT;;AAUA,QAAMc,mBAAmB,GAAGH,UAAU,IAAI;AACxC,QAAIA,UAAJ,EAAgB;AACdP,MAAAA,KAAK,CAACO,UAAU,CAACI,QAAZ,CAAL;AACAT,MAAAA,aAAa,CAACK,UAAU,CAACC,KAAX,CAAiBI,WAAlB,CAAb;AACAR,MAAAA,gBAAgB,CAACG,UAAU,CAACM,IAAZ,CAAhB;AACD,KAJD,MAIO;AACLb,MAAAA,KAAK,CAAC,uDAAD,CAAL;AACAE,MAAAA,aAAa,CAAC,wBAAD,CAAb;AACAE,MAAAA,gBAAgB,CAAC,gBAAD,CAAhB;AACD;AACF,GAVD;;AAYA,SAAOP,kBAAkB,CAACiB,MAAnB,GAA4B,CAA5B,GACL;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AACE,IAAA,SAAS,EAAC,qBADZ;AAEE,IAAA,GAAG,EAAEf,EAFP;AAGE,IAAA,KAAK,EAAE;AACLgB,MAAAA,eAAe,EAAG,OAAMhB,EAAG,GADtB;AAELiB,MAAAA,cAAc,EAAE,OAFX;AAGLC,MAAAA,kBAAkB,EAAE;AAHf;AAHT,KASE;AAAI,IAAA,SAAS,EAAC;AAAd,KAAoChB,KAApC,CATF,EAUE;AAAK,IAAA,SAAS,EAAC;AAAf,KAAwCE,QAAxC,CAVF,CADF,EAaE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAI,IAAA,SAAS,EAAC;AAAd,iCADF,EAEE,MAAC,GAAD;AAAK,IAAA,iBAAiB,EAAEN;AAAxB,IAFF,CADF,EAKGA,kBAAkB,CAACqB,GAAnB,CAAuB,CAACX,UAAD,EAAaY,CAAb,KAAmB;AACzC,WACE;AACE,MAAA,GAAG,EAAEZ,UAAU,CAACa,EADlB;AAEE,MAAA,YAAY,EAAE,MAAMV,mBAAmB,CAACH,UAAD,CAFzC;AAGE,MAAA,YAAY,EAAE,MAAMG,mBAAmB,EAHzC;AAIE,MAAA,SAAS,EAAC;AAJZ,OAKE,MAAC,IAAD;AAAM,MAAA,iBAAiB,EAAEb,kBAAzB;AAA6C,MAAA,UAAU,EAAEU,UAAzD;AAAqE,MAAA,QAAQ,EAAEY;AAA/E,MALF,CADF;AASD,GAVA,CALH,CAbF,CADK,GAgCH,IAhCJ;AAiCD,CA/DD;;AAiEA,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACL1B,IAAAA,WAAW,EAAE0B,KAAK,CAAC1B;AADd,GAAP;AAGD,CAJD;;AAMA,MAAM2B,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAOlC,kBAAkB,CAAC;AAAEC,IAAAA;AAAF,GAAD,EAAqBiC,QAArB,CAAzB;AACD,CAFD;;AAIA,eAAenC,OAAO,CAACgC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6C7B,MAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { setRestaurants } from \"../../actions\";\nimport Card from \"../common/card\";\nimport Key from \"../common/key\";\n\nconst Awards = props => {\n  const { setRestaurants, restaurants } = props;\n  const [awardedRestaurants, setAwardedRestaurants] = useState([]);\n  const [bg, setBg] = useState(\"http://benedict-paris.com/img/lightbox/plats/B-17.jpg\");\n  const [title, setImageTitle] = useState(\"Les restaurants primés\");\n  const [subtitle, setImageSubtitle] = useState(\"chaque semaine\");\n\n  useEffect(() => { setRestaurants(); }, [setRestaurants]);\n  useEffect(() => {\n    const sortedRestaurants = []\n    restaurants.forEach(restaurant => {\n      if (restaurant.award) {\n        sortedRestaurants.push(restaurant);\n      };\n      setAwardedRestaurants(sortedRestaurants);\n    });\n  }, [restaurants]);\n\n  const handleListItemHover = restaurant => {\n    if (restaurant) {\n      setBg(restaurant.imageUrl);\n      setImageTitle(restaurant.award.description);\n      setImageSubtitle(restaurant.name);\n    } else {\n      setBg(\"http://benedict-paris.com/img/lightbox/plats/B-17.jpg\");\n      setImageTitle(\"Les restaurants primés\");\n      setImageSubtitle(\"chaque semaine\");\n    }\n  };\n  \n  return awardedRestaurants.length > 0 ? (\n    <div className=\"awards-page-wrapper\">\n      <div \n        className=\"awards-page-big-img\"\n        key={bg}\n        style={{ \n          backgroundImage: `url(${bg})`,\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      >\n        <h1 className=\"awards-image-title\">{title}</h1>\n        <div className=\"awards-image-subtitle\">{subtitle}</div>\n      </div>\n      <div className=\"awards-listing\">\n        <div className=\"title-and-key\">\n          <h2 className=\"awards-listing-title\">Les restaurants primés</h2>\n          <Key listedRestaurants={awardedRestaurants} />\n        </div>\n        {awardedRestaurants.map((restaurant, i) => {\n          return (\n            <div \n              key={restaurant.id} \n              onMouseEnter={() => handleListItemHover(restaurant)}\n              onMouseLeave={() => handleListItemHover()}\n              className=\"awarded-restaurant\">\n              <Card listedRestaurants={awardedRestaurants} restaurant={restaurant} tabIndex={i} />\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  ) : null;\n};\n\nconst mapStateToProps = state => {\n  return {\n    restaurants: state.restaurants,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ setRestaurants }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Awards);"]},"metadata":{},"sourceType":"module"}